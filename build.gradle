plugins {

    id 'java'
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group 'org.soj.cafe.shop'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


test {
    useJUnitPlatform()
}
sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login','9447924f5d7eb76993a08e439596828b94eed34a'
        property 'sonar.projectKey','Association '
        property "sonar.exclusions", "**/Main.*"
    }
}


tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
tasks.named('sonarqube').configure {
    dependsOn test
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/BookPOJO.class",
                    '**/Main.*'
            ])
        }))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.4.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.4.1'
    compile group: 'com.lmax', name: 'disruptor', version: '3.+'

}
